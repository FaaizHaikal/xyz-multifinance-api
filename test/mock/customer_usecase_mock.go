// Code generated by MockGen. DO NOT EDIT.
// Source: internal/usecase/customer_usecase.go
//
// Generated by this command:
//
//	mockgen -source=internal/usecase/customer_usecase.go -destination=test/mock/customer_usecase_mock.go -package=mock CustomerUseCase
//

// Package mock is a generated GoMock package.
package mock

import (
	reflect "reflect"
	model "xyz-multifinance-api/internal/model"

	gomock "go.uber.org/mock/gomock"
)

// MockCustomerUseCase is a mock of CustomerUseCase interface.
type MockCustomerUseCase struct {
	ctrl     *gomock.Controller
	recorder *MockCustomerUseCaseMockRecorder
	isgomock struct{}
}

// MockCustomerUseCaseMockRecorder is the mock recorder for MockCustomerUseCase.
type MockCustomerUseCaseMockRecorder struct {
	mock *MockCustomerUseCase
}

// NewMockCustomerUseCase creates a new mock instance.
func NewMockCustomerUseCase(ctrl *gomock.Controller) *MockCustomerUseCase {
	mock := &MockCustomerUseCase{ctrl: ctrl}
	mock.recorder = &MockCustomerUseCaseMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockCustomerUseCase) EXPECT() *MockCustomerUseCaseMockRecorder {
	return m.recorder
}

// GetCustomerProfileByID mocks base method.
func (m *MockCustomerUseCase) GetCustomerProfileByID(id string) (*model.CustomerResponse, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetCustomerProfileByID", id)
	ret0, _ := ret[0].(*model.CustomerResponse)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetCustomerProfileByID indicates an expected call of GetCustomerProfileByID.
func (mr *MockCustomerUseCaseMockRecorder) GetCustomerProfileByID(id any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetCustomerProfileByID", reflect.TypeOf((*MockCustomerUseCase)(nil).GetCustomerProfileByID), id)
}

// GetCustomerProfileByNIK mocks base method.
func (m *MockCustomerUseCase) GetCustomerProfileByNIK(nik string) (*model.CustomerResponse, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetCustomerProfileByNIK", nik)
	ret0, _ := ret[0].(*model.CustomerResponse)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetCustomerProfileByNIK indicates an expected call of GetCustomerProfileByNIK.
func (mr *MockCustomerUseCaseMockRecorder) GetCustomerProfileByNIK(nik any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetCustomerProfileByNIK", reflect.TypeOf((*MockCustomerUseCase)(nil).GetCustomerProfileByNIK), nik)
}
